import NetscriptDefinitions from './NetscriptDefinitions';

declare global {
  function sprintf(fmt: string, ...args): string;
  type ActiveFragment = NetscriptDefinitions.ActiveFragment;
  type AugmentationStats = NetscriptDefinitions.AugmentationStats;
  type AugmentPair = NetscriptDefinitions.AugmentPair;
  type BasicHGWOptions = NetscriptDefinitions.BasicHGWOptions;
  type BitNodeMultipliers = NetscriptDefinitions.BitNodeMultipliers;
  type Bladeburner = NetscriptDefinitions.Bladeburner;
  type BladeburnerCurAction = NetscriptDefinitions.BladeburnerCurAction;
  type CharacterInfo = NetscriptDefinitions.CharacterInfo;
  type CharacterMult = NetscriptDefinitions.CharacterMult;
  type CodingAttemptOptions = NetscriptDefinitions.CodingAttemptOptions;
  type CodingContract = NetscriptDefinitions.CodingContract;
  type Corporation = NetscriptDefinitions.Corporation;
  type CorporationInfo = NetscriptDefinitions.CorporationInfo;
  type CrimeStats = NetscriptDefinitions.CrimeStats;
  type Division = NetscriptDefinitions.Division;
  type Employee = NetscriptDefinitions.Employee;
  type EmployeeJobs = NetscriptDefinitions.EmployeeJobs;
  type EquipmentStats = NetscriptDefinitions.EquipmentStats;
  type Formulas = NetscriptDefinitions.Formulas;
  type Fragment = NetscriptDefinitions.Fragment;
  type GameInfo = NetscriptDefinitions.GameInfo;
  type Gang = NetscriptDefinitions.Gang;
  type GangFormulas = NetscriptDefinitions.GangFormulas;
  type GangGenInfo = NetscriptDefinitions.GangGenInfo;
  type GangMemberAscension = NetscriptDefinitions.GangMemberAscension;
  type GangMemberInfo = NetscriptDefinitions.GangMemberInfo;
  type GangOtherInfo = NetscriptDefinitions.GangOtherInfo;
  type GangOtherInfoObject = NetscriptDefinitions.GangOtherInfoObject;
  type GangTaskStats = NetscriptDefinitions.GangTaskStats;
  type GangTerritory = NetscriptDefinitions.GangTerritory;
  type HackingFormulas = NetscriptDefinitions.HackingFormulas;
  type HackingMultipliers = NetscriptDefinitions.HackingMultipliers;
  type Hacknet = NetscriptDefinitions.Hacknet;
  type HacknetMultipliers = NetscriptDefinitions.HacknetMultipliers;
  type HacknetNodeConstants = NetscriptDefinitions.HacknetNodeConstants;
  type HacknetNodesFormulas = NetscriptDefinitions.HacknetNodesFormulas;
  type HacknetServerConstants = NetscriptDefinitions.HacknetServerConstants;
  type HacknetServersFormulas = NetscriptDefinitions.HacknetServersFormulas;
  type InvestmentOffer = NetscriptDefinitions.InvestmentOffer;
  type IStyleSettings = NetscriptDefinitions.IStyleSettings;
  type Material = NetscriptDefinitions.Material;
  type NetscriptPort = NetscriptDefinitions.NetscriptPort;
  type NodeStats = NetscriptDefinitions.NodeStats;
  type NS = NetscriptDefinitions.NS;
  type Office = NetscriptDefinitions.Office;
  type OfficeAPI = NetscriptDefinitions.OfficeAPI;
  type Player = NetscriptDefinitions.Player;
  type PlayerSkills = NetscriptDefinitions.PlayerSkills;
  type ProcessInfo = NetscriptDefinitions.ProcessInfo;
  type Product = NetscriptDefinitions.Product;
  type RunningScript = NetscriptDefinitions.RunningScript;
  type Server = NetscriptDefinitions.Server;
  type Singularity = NetscriptDefinitions.Singularity;
  type SkillsFormulas = NetscriptDefinitions.SkillsFormulas;
  type Sleeve = NetscriptDefinitions.Sleeve;
  type SleeveInformation = NetscriptDefinitions.SleeveInformation;
  type SleeveSkills = NetscriptDefinitions.SleeveSkills;
  type SleeveTask = NetscriptDefinitions.SleeveTask;
  type SleeveWorkGains = NetscriptDefinitions.SleeveWorkGains;
  type SourceFileLvl = NetscriptDefinitions.SourceFileLvl;
  type Stanek = NetscriptDefinitions.Stanek;
  type StockOrder = NetscriptDefinitions.StockOrder;
  type StockOrderObject = NetscriptDefinitions.StockOrderObject;
  type Styles = NetscriptDefinitions.Styles;
  type Theme = NetscriptDefinitions.Theme;
  type TIX = NetscriptDefinitions.TIX;
  type UserInterface = NetscriptDefinitions.UserInterface;
  type UserInterfaceTheme = NetscriptDefinitions.UserInterfaceTheme;
  type Warehouse = NetscriptDefinitions.Warehouse;
  type WarehouseAPI = NetscriptDefinitions.WarehouseAPI;
}
